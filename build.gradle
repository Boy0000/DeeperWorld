buildscript {
    ext.kotlin_version = '1.3.61'

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

plugins {
    id 'java'
    id 'idea'
}

//Stops errors when a parent project defines the version being used for a plugin like kotlin
ext.addPlugin = { String pluginId -> if (!project.getPlugins().hasPlugin(pluginId)) apply plugin: pluginId }

addPlugin('org.jetbrains.kotlin.jvm')
addPlugin('com.github.johnrengelman.shadow')

ext.plugin_path = '' //Put your plugins folder directory here! If it is left as '', jars won't be copied

group = 'com.derongan.minecraft'
version = pluginVersion + "-SNAPSHOT"

sourceCompatibility = 1.8
targetCompatibility = 1.8
repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    compileOnly 'org.spigotmc:spigot-api:1.15-R0.1-SNAPSHOT'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

shadowJar {
    getArchiveClassifier().set(null)
    minimize {
        exclude(dependency("org.jetbrains.kotlin:.*"))
    }
}

build.dependsOn shadowJar

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

//Move into plugins folder
if (plugin_path != '') {
    task copyJar(type: Copy) {
        from shadowJar // here it automatically reads jar file produced from jar task
        into plugin_path
    }
    build.dependsOn copyJar
} else println("Skipped copyJar")